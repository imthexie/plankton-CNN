name: "PlankNet"
layers {
  name: "data"
  type: DATA
  
  data_param {
    source: "noval_traindata_db"
    batch_size: 30
	backend: LMDB
  }
  
  transform_param {
	mirror: 1
	crop_size: 128
  }
  
  include {
    phase: TRAIN
  }
  
  top: "data"
  top: "label"
}

layers {
  name: "data"
  type: DATA
  
  data_param {
    source: "val_traindata_db"
    batch_size: 10
	backend: LMDB
  }
  
  include {
    phase: TEST
  }
  
  top: "data"
  top: "label"
}

layers {
  bottom: "data"
  top: "conv1/3x3_s1_1"
  name: "conv1/3x3_s1_1"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_1"
  top: "conv1/3x3_s1_1"
  name: "conv1/relu_3x3_1"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_1"
  top: "conv1/3x3_s1_2"
  name: "conv1/3x3_s1_2"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_2"
  top: "conv1/3x3_s1_2"
  name: "conv1/relu_3x3_2"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_2"
  top: "pool1/3x3_s2_1"
  name: "pool1/3x3_s2_1"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool1/3x3_s2_1"
  top: "conv1/3x3_s1_3"
  name: "conv1/3x3_s1_3"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_3"
  top: "conv1/3x3_s1_3"
  name: "conv1/relu_3x3_3"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_3"
  top: "conv1/3x3_s1_4"
  name: "conv1/3x3_s1_4"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_4"
  top: "conv1/3x3_s1_4"
  name: "conv1/relu_3x3_4"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_4"
  top: "pool1/3x3_s2_2"
  name: "pool1/3x3_s2_2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool1/3x3_s2_2"
  top: "conv1/3x3_s1_5"
  name: "conv1/3x3_s1_5"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_5"
  top: "conv1/3x3_s1_5"
  name: "conv1/relu_3x3_5"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_5"
  top: "pool1/3x3_s2_3"
  name: "pool1/3x3_s2_3"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool1/3x3_s2_3"
  top: "conv1/3x3_s1_6"
  name: "conv1/3x3_s1_6"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layers {
  bottom: "conv1/3x3_s1_6"
  top: "conv1/3x3_s1_6"
  name: "conv1/relu_3x3_6"
  type: RELU
}

layers {
  bottom: "conv1/3x3_s1_6"
  top: "pool1/3x3_s2_4"
  name: "pool1/3x3_s2_4"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool1/3x3_s2_4"
  top: "pool5/drop_3x3_s1"
  name: "pool5/drop_3x3_s1"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.4
  }
}

layers {
  bottom: "pool5/drop_3x3_s1"
  top: "fc1"
  name: "fc1"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 121
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "fc1"
  bottom: "label"
  top:"accuracy"

}

layers {
  name: "softmax_loss"
  type: SOFTMAX_LOSS
  bottom: "fc1"
  bottom: "label"
  top: "softmax_loss"
}

